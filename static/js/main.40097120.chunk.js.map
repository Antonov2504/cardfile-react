{"version":3,"sources":["utils/useFormValidation.js","utils/validateData.js","components/Login.js","components/Preloader.js","components/Plug.js","images/no-photo.svg","utils/constants.js","components/UserCard.js","components/Main.js","contexts/AppContext.js","components/Header.js","components/Footer.js","components/ProtectedRoute.js","components/PageNotFound.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/AddUserPopup.js","components/ConfirmationPopup.js","utils/utils.js","utils/ReqresApi.js","utils/getWindowDimensions.js","components/App.js","reportWebVitals.js","index.js"],"names":["useFormValidation","inputs","validateData","useState","inputValues","setInputValues","name","value","validationInput","setValidationInput","enableValidation","setEnableValidation","isValidForm","setIsValidForm","validationErrors","setValidationErrors","changeValidationInput","input","useEffect","enableFormValidation","Object","keys","every","key","form","emptyValidationErrors","setFormInputValues","all","clearFormInputValues","clearValidationErrors","handleChange","evt","target","runFormValidation","validationRequirements","first_name","empty","regExp","minLength","maxLength","last_name","email","avatar","password","validationErrorsText","errors","trim","test","length","Login","isLoading","isErrorResponse","handleLogin","className","onSubmit","preventDefault","type","onChange","autoComplete","status","message","disabled","Preloader","Plug","text","serverRejectMessage","UserCard","card","onCardEdit","onCardDelete","src","alt","errored","cardImage","setCardImage","plugImage","onError","onClick","Main","cards","isLoadingCards","isAllCards","isError","map","id","AppContext","React","createContext","Header","onAddUser","onClickSignout","useContext","loggedIn","to","Footer","ProtectedRoute","Component","component","props","NotFoundPage","history","useHistory","goBack","PopupWithForm","isOpened","title","children","onClose","e","classList","contains","action","noValidate","EditProfilePopup","currentUser","isOpen","onUpdate","placeholder","AddUserPopup","onAdd","ConfirmationPopup","cardId","handleOriginalResponse","res","ok","json","ReqresApi","options","baseUrl","authorize","fetch","method","headers","body","JSON","stringify","then","data","token","localStorage","setItem","getUsers","pageNumber","createUser","user","updateUser","deleteUser","userId","getWindowDimensions","window","width","innerWidth","height","innerHeight","pageYOffset","scrollHeight","document","App","setLoggedIn","users","setUsers","renderedUsers","setRenderedUsers","editableUser","setEditableUser","deletedUserId","setDeletedUserId","windowDimensions","setWindowDimensions","showMoreCards","setShowMoreCards","setIsAllCards","lastIndexPage","useRef","setIsLoadingCards","isLoadingSignin","setIsLoadingSignin","isLoadingAdd","setIsLoadingAdd","isLoadingUpdate","setIsLoadingUpdate","isLoadingDelete","setIsLoadingDelete","isAddUserPopupOpen","setIsAddUserPopupOpen","isUpdatePopupOpen","setIsUpdatePopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","isErrorSigninResponse","setIsErrorSigninResponse","isErrorCreateResponse","setIsErrorCreateResponse","isErrorUpdateResponse","setIsErrorUpdateResponse","isErrorDeleteResponse","setIsErrorDeleteResponse","setIsError","reqresApi","closeAllPopups","downloadUsers","current","total_pages","catch","err","console","log","getItem","push","handleScroll","addEventListener","removeEventListener","handleEscClose","Provider","path","parse","error","exact","removeItem","PageNotFound","userData","updatedAt","u","newUser","createdAt","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40097120.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useFormValidation(inputs, validateData) {\n  const [inputValues, setInputValues] = useState({                                                                          // Стейт со значениями инпутов для валидации\n    ...inputs\n  });\n  const [validationInput, setValidationInput] = useState({                                                                  // Стейт валидируемый инпут\n    name: '',\n    value: ''\n  });\n  const [enableValidation, setEnableValidation] = useState({ ...inputs });                                                  // Стейт состояния валидации инпутов выполнялась/не выполнялась\n  const [isValidForm, setIsValidForm] = useState(false);                                                                    // Стейт состояния форма валидна\n  const [validationErrors, setValidationErrors] = useState({});                                                             // Стейт ошибок валидации\n\n  // При изменении валидируемого инпута выполняется валидация его значения\n  useEffect(() => {\n    const enableFormValidation = Object.keys(enableValidation).every(key => {                                               // Валидация формы завершена, все поля формы провалидированы\n      return enableValidation[key];\n    });\n    // Если включена валидация поля, выполнить валидацию значения поля, записать ошибки\n    if (enableValidation[validationInput.name]) {\n      setValidationErrors({\n        ...validationErrors,\n        ...validateData(validationInput)\n      })\n    }\n\n    // Если выполнена валидация всех полей формы, обновить Стейт состояния валидации инпутов\n    if (enableFormValidation) {\n      setEnableValidation({\n        ...enableValidation,\n        form: true\n      });\n    }\n  }, [validationInput]);\n\n  // Валидация формы, проверка при изменении Стейта ошибок валидации\n  useEffect(() => {\n    const emptyValidationErrors = Object.keys(validationErrors).every(key => {                                              // Ошибки валидации отсутствуют\n      return !validationErrors[key];\n    });\n    enableValidation.form && emptyValidationErrors ? setIsValidForm(true) : setIsValidForm(false);                          // Если провалидированы все поля формы и отутствуют ошибки валидации - форма валидна\n  }, [validationErrors]);\n\n  // При первой загрузке компонента форма невалидна\n  useEffect(() => {\n    setIsValidForm(false);\n  }, []);\n\n  // Изменить валидируемый инпут\n  function changeValidationInput(input) {\n    const { name, value } = input;\n    setEnableValidation({\n      ...enableValidation,\n      [name]: true\n    });\n    setValidationInput({\n      ...validationInput,\n      name,\n      value\n    });\n  }\n\n  // Выполнить валидацию формы\n  function runFormValidation() {\n    for (const input in inputValues) {\n      changeValidationInput({ name: input, value: inputValues[input] });\n    }\n  }\n\n  // Задать значения инпутов\n  function setFormInputValues(inputs) {\n    setEnableValidation({\n      all: true\n    });\n    setInputValues({\n      ...inputValues,\n      ...inputs\n    });\n  }\n\n  // Очистить поля формы\n  function clearFormInputValues() {\n    setInputValues({});\n  }\n\n  // Очистить ошибки валидации\n  function clearValidationErrors() {\n    setValidationErrors({});\n  }\n\n  // Изменение Стейтов значений инпутов, валидации инпутов и валидируемого инпута при изменении значений инпутов\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setInputValues({\n      ...inputValues,\n      [name]: value\n    });\n    changeValidationInput(evt.target);\n  }\n\n  return {\n    inputValues,\n    setFormInputValues,\n    clearFormInputValues,\n    clearValidationErrors,\n    validationErrors,\n    handleChange,\n    runFormValidation,\n    isValidForm\n  };\n}\n\nexport default useFormValidation;","const validationRequirements = {\n  first_name: {\n    empty: true,\n    regExp: /^[a-zA-Zа-яА-Я\\sё\\-]+$/i,\n    minLength: 2,\n    maxLength: 30,\n  },\n  last_name: {\n    empty: true,\n    regExp: /^[a-zA-Zа-яА-Я\\sё\\-]+$/i,\n    minLength: 2,\n    maxLength: 30,\n  },\n  email: {\n    empty: true,\n    regExp: /^(([^#<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  },\n  avatar: {\n    regExp: /(https?:\\/\\/(([\\w-]+\\.)+)+([\\w])+((\\/[a-z_0-9\\-:~\\\\.%\\\\/?#[\\]@!$&'\\\\(\\\\)*+,;=]+)+)?)/i,\n  },\n\n  password: {\n    empty: true,\n    regExp: /^[a-zA-Z0-9:%.,_+~#=@]+$/,\n  }\n}\n\nconst validationErrorsText = {\n  first_name: {\n    empty: 'Пожалуйста, укажите имя',\n    regExp: 'Пожалуйста, используйте только буквы',\n    minLength: `Допускается имя не короче ${validationRequirements.first_name.minLength} символов`,\n    maxLength: `Допускается имя не длиннее ${validationRequirements.first_name.maxLength} символов`,\n  },\n  last_name: {\n    empty: 'Пожалуйста, укажите фамилию',\n    regExp: 'Пожалуйста, используйте только буквы',\n    minLength: `Допускается фамилия не короче ${validationRequirements.last_name.minLength} символов`,\n    maxLength: `Допускается фамилия не длиннее ${validationRequirements.last_name.maxLength} символов`,\n  },\n  email: {\n    empty: 'Пожалуйста, укажите Email',\n    regExp: 'Некорректный Email',\n  },\n  avatar: {\n    regExp: 'Некорректная ссылка',\n  },\n  password: {\n    empty: 'Пожалуйста, укажите пароль',\n    regExp: 'Пароль может состоять из латинских букв, цифр и специальных символов : % . , _ + ~ # = @',\n  }\n}\n\nfunction validateData(input) {\n  let errors = {};\n\n  // Проверка поля на пустоту\n  if (validationRequirements[input.name].empty && !input.value.trim()) {\n    errors[input.name] = validationErrorsText[input.name].empty;\n    return errors;\n  } else {\n    errors[input.name] = '';\n  }\n\n  // Проверка поля на регулярное выражение\n  if (validationRequirements[input.name].regExp && input.value && !validationRequirements[input.name].regExp.test(input.value)) {\n    errors[input.name] = validationErrorsText[input.name].regExp;\n    return errors;\n  } else {\n    errors[input.name] = '';\n  }\n\n  // Проверка поля на минимальную длину\n  if (validationRequirements[input.name].minLength && input.value.length < validationRequirements[input.name].minLength) {\n    errors[input.name] = validationErrorsText[input.name].minLength;\n    return errors;\n  } else {\n    errors[input.name] = '';\n  }\n\n  // Проверка поля на максимальную длину\n  if (validationRequirements[input.name].maxLength && input.value.length > validationRequirements[input.name].maxLength) {\n    errors[input.name] = validationErrorsText[input.name].maxLength;\n    return errors;\n  } else {\n    errors[input.name] = '';\n  }\n\n  return errors;\n}\n\nexport default validateData;","import React from 'react';\nimport useFormValidation from '../utils/useFormValidation';\nimport validateData from '../utils/validateData';\n\nfunction Login({ isLoading, isErrorResponse, handleLogin }) {\n  const { inputValues, handleChange, validationErrors, isValidForm } = useFormValidation({ email: '', password: '' }, validateData);\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const { email, password } = inputValues;\n    if (!email || !password) {\n      return;\n    }\n    if (isValidForm) handleLogin(email, password);\n  }\n\n  return (\n    <section className=\"sign\">\n      <div className=\"logo logo_align_center\">B</div>\n      <p className=\"sign__heading\">Рады видеть!</p>\n      <form\n        name=\"login-form\"\n        className=\"sign__form\"\n        onSubmit={handleSubmit}>\n        <fieldset className=\"sign__fieldset\">\n          <label className=\"sign__label\">\n            <span className=\"sign__field\">E-mail</span>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={inputValues.email}\n              className={`sign__input ${validationErrors.email && 'sign__input_type_error'}`}\n              onChange={handleChange}\n              autoComplete=\"off\"\n            />\n            {validationErrors.email &&\n              <p className=\"validity-error\">{validationErrors.email}</p>\n            }\n          </label>\n          <label className=\"sign__label\">\n            <span className=\"sign__field\">Пароль</span>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={inputValues.password}\n              className={`sign__input ${validationErrors.password && 'sign__input_type_error'}`}\n              onChange={handleChange}\n            />\n            {validationErrors.password &&\n              <p className=\"validity-error\">{validationErrors.password}</p>\n            }\n          </label>\n        </fieldset>\n        {isErrorResponse.status && <p className=\"server-error\">{isErrorResponse.message}</p>}\n        {isLoading && <div className=\"sign__preloader\" />}\n        {!isLoading && <button type=\"submit\" className=\"sign__button\" disabled={!isValidForm}>Войти</button>}\n      </form>\n    </section>\n  );\n}\n\nexport default Login;","import React from 'react';\n\nconst Preloader = () => {\n    return (\n        <div className=\"preloader\">\n            <div className=\"preloader__container\">\n                <span className=\"preloader__round\"></span>\n            </div>\n        </div>\n    )\n};\n\nexport default Preloader;\n","import React from 'react';\n\nfunction Plug({ text }) {\n  return (\n    <p className=\"plug\">{text}</p>\n  )\n};\n\nexport default Plug;\n","export default __webpack_public_path__ + \"static/media/no-photo.9b04560d.svg\";","export const serverRejectMessage = 'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз';\nexport const noDataMessage = 'Ничего не найдено';\nexport const reqresApiBaseUrl = 'https://reqres.in/api';\nexport const reqresImgBaseUrl = 'https://reqres.in/img';\n","import React, { useEffect, useState } from 'react';\nimport plugImage from '../images/no-photo.svg';\nimport { noDataMessage } from '../utils/constants';\n\nfunction UserCard({ card, onCardEdit, onCardDelete }) {\n  const [cardImage, setCardImage] = useState({\n    src: card.avatar,\n    alt: `${card.first_name} ${card.last_name}`,\n    errored: false\n  });\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  function handleError() {\n    if (!cardImage.errored) {\n      setCardImage({\n        ...cardImage,\n        src: plugImage,\n        alt: noDataMessage,\n        errored: true\n      });\n    }\n  }\n\n  useEffect(() => {\n    setCardImage({\n      ...cardImage,\n      src: card.avatar || plugImage,\n      alt: `${card.first_name} ${card.last_name}`,\n      errored: false\n    });\n  }, [card]);\n\n  return (\n    <li className=\"card\">\n      <div className=\"card__info\">\n        <img src={cardImage.src} alt={cardImage.alt} className={`card__image ${cardImage.errored && 'card__image_type_no-image'}`} onError={handleError} />\n        <h2 className=\"card__name\">{card.first_name} {card.last_name}</h2>\n        <p className=\"card__email\">{card.email}</p>\n      </div>\n      <div className=\"card__buttons\">\n        <button type=\"button\" className=\"card__button card__button_type_edit\" onClick={() => onCardEdit(card)}></button>\n        <button type=\"button\" className=\"card__button card__button_type_delete\" onClick={handleDeleteClick}></button>\n      </div>\n    </li>\n  );\n}\n\nexport default UserCard;\n","import React from 'react';\nimport Preloader from './Preloader';\nimport Plug from './Plug';\nimport UserCard from './UserCard';\n\nfunction Main({ cards, isLoadingCards, isAllCards, isError, onCardEdit, onCardDelete }) {\n  return (\n    <section className=\"elements\" >\n      {isError && isError.status && <Plug text={isError.message} />}\n      {!!cards.length &&\n        <ul className={`cards ${isAllCards && 'cards_quantity_max'}`}>\n          {\n            cards.map(card => (\n              <UserCard\n                card={card}\n                key={card.id}\n                onCardEdit={onCardEdit}\n                onCardDelete={onCardDelete}\n              />\n            ))}\n        </ul>\n      }\n      {isLoadingCards && <Preloader />}\n    </section >\n  );\n}\n\nexport default Main;\n","import React from 'react';\r\n\r\nexport const AppContext = React.createContext();\r\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../contexts/AppContext';\n\nfunction Header({ onAddUser, onClickSignout }) {\n  const value = useContext(AppContext);\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">B</div>\n      {/* Меню авторизованный пользователь */}\n      {value.loggedIn &&\n        <div className=\"header__buttons\">\n          <button type=\"button\" className=\"header__button header__button_type_add-user\" onClick={onAddUser}>Создать пользователя</button>\n          <button type=\"button\" className=\"header__button\"><Link to=\"/signin\" className=\"header__link\" onClick={onClickSignout}>Выйти</Link></button>\n        </div>\n      }\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <section className=\"footer\">\n      <p className=\"footer__text\">&#169; 2021 Картотека пользователей от reqres.in</p>\n    </section>\n  );\n}\n\nexport default Footer;","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  const value = useContext(AppContext);\r\n  return (\r\n    <Route>\r\n      <Header {...props} />\r\n      {\r\n        value.loggedIn ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n      <Footer />\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction NotFoundPage() {\n  const history = useHistory();\n\n  function handleClick() {\n    history.goBack();\n  }\n\n  return (\n    <section className=\"notFoundPage\">\n      <div className=\"notFoundPage__container\">\n        <p className=\"notFoundPage__title\">404</p>\n        <p className=\"notFoundPage__subtitle\">Страница не найдена</p>\n      </div>\n      <button type=\"button\" className=\"notFoundPage__button\" onClick={handleClick}>Назад</button>\n    </section>\n  );\n}\n\nexport default NotFoundPage;","import React from 'react';\r\n\r\nfunction PopupWithForm({ isOpened, name, title, children, onClose, onSubmit }) {\r\n  return (\r\n    <div className={`popup ${isOpened && 'popup_opened'} popup_type_${name}`} onClick={(e) => { if (e.target.classList.contains('popup')) onClose() }}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"popup__button popup__button_type_close-popup\" onClick={onClose}></button>\r\n        <form action=\"#\" name={`${name}`} className=\"form\" onSubmit={onSubmit} noValidate>\r\n          <h2 className={`popup__heading`}>{title}</h2>\r\n          {children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport useFormValidation from '../utils/useFormValidation';\r\nimport validateData from '../utils/validateData';\r\n\r\nfunction EditProfilePopup({ currentUser, isOpen, onClose, onUpdate, isLoading, isErrorResponse }) {\r\n  const {\r\n    inputValues,\r\n    setFormInputValues,\r\n    clearValidationErrors,\r\n    handleChange,\r\n    validationErrors,\r\n    isValidForm\r\n  } = useFormValidation({\r\n    first_name: currentUser.first_name,\r\n    last_name: currentUser.last_name,\r\n    email: currentUser.email,\r\n    avatar: currentUser.avatar\r\n  }, validateData);\r\n\r\n  useEffect(() => {\r\n    clearValidationErrors();\r\n    setFormInputValues(currentUser);\r\n  }, [currentUser]);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const { id, first_name, last_name, email, avatar } = inputValues;\r\n    if (!first_name || !last_name || !email) {\r\n      return;\r\n    }\r\n    if (isValidForm) onUpdate({ id, first_name, last_name, email, avatar });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"edit-user-data\"\r\n      title=\"Редактировать профиль\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"first_name\"\r\n          value={inputValues.first_name}\r\n          placeholder=\"Имя\"\r\n          className={`form__input ${validationErrors.first_name && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.first_name &&\r\n          <p className=\"validity-error\">{validationErrors.first_name}</p>\r\n        }\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"last_name\"\r\n          value={inputValues.last_name}\r\n          placeholder=\"Фамилия\"\r\n          className={`form__input ${validationErrors.last_name && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.last_name &&\r\n          <p className=\"validity-error\">{validationErrors.last_name}</p>\r\n        }\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={inputValues.email}\r\n          placeholder=\"Email\"\r\n          className={`form__input ${validationErrors.email && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.email &&\r\n          <p className=\"validity-error\">{validationErrors.email}</p>\r\n        }\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"avatar\"\r\n          value={inputValues.avatar}\r\n          placeholder=\"Ссылка на аватар\"\r\n          className={`form__input ${validationErrors.avatar && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.avatar &&\r\n          <p className=\"validity-error\">{validationErrors.avatar}</p>\r\n        }\r\n      </label>\r\n      {isErrorResponse.status && <p className=\"server-error\">{isErrorResponse.message}</p>}\r\n      {isLoading && <div className=\"preloader preloader_type_button\" />}\r\n      {!isLoading && <button type=\"submit\" className=\"form__button\" disabled={!isValidForm}>Сохранить</button>}\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport useFormValidation from '../utils/useFormValidation';\r\nimport validateData from '../utils/validateData';\r\nimport plugImage from '../images/no-photo.svg';\r\n\r\nfunction AddUserPopup({ isOpen, onClose, onAdd, isLoading, isErrorResponse }) {\r\n  const {\r\n    inputValues,\r\n    clearFormInputValues,\r\n    handleChange,\r\n    validationErrors,\r\n    isValidForm\r\n  } = useFormValidation({\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    avatar: ''\r\n  }, validateData);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const { first_name, last_name, email, avatar = plugImage } = inputValues;\r\n    if (!first_name || !last_name || !email) {\r\n      return;\r\n    }\r\n    if (isValidForm) {\r\n      onAdd({ first_name, last_name, email, avatar });\r\n      clearFormInputValues();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"add-user\"\r\n      title=\"Новый пользователь\"\r\n    >\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"first_name\"\r\n          value={inputValues.first_name || ''}\r\n          placeholder=\"Имя\"\r\n          className={`form__input ${validationErrors.first_name && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.first_name &&\r\n          <p className=\"validity-error\">{validationErrors.first_name}</p>\r\n        }\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"last_name\"\r\n          value={inputValues.last_name || ''}\r\n          placeholder=\"Фамилия\"\r\n          className={`form__input ${validationErrors.last_name && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.last_name &&\r\n          <p className=\"validity-error\">{validationErrors.last_name}</p>\r\n        }\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={inputValues.email || ''}\r\n          placeholder=\"Email\"\r\n          className={`form__input ${validationErrors.email && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.email &&\r\n          <p className=\"validity-error\">{validationErrors.email}</p>\r\n        }\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"avatar\"\r\n          value={inputValues.avatar || ''}\r\n          placeholder=\"Ссылка на аватар\"\r\n          className={`form__input ${validationErrors.avatar && 'form__input_type_error'}`}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\" />\r\n        {validationErrors.avatar &&\r\n          <p className=\"validity-error\">{validationErrors.avatar}</p>\r\n        }\r\n      </label>\r\n      {isErrorResponse.status && <p className=\"sign__error\">{isErrorResponse.message}</p>}\r\n      {isLoading && <div className=\"preloader preloader_type_button\" />}\r\n      {!isLoading && <button type=\"submit\" className=\"form__button\" disabled={!isValidForm}>Создать</button>}\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddUserPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmationPopup({ cardId, isOpen, onClose, onCardDelete, isLoading, isErrorResponse }) {\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onCardDelete(cardId);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      name=\"delete-card\"\r\n      title=\"Вы уверены?\"\r\n    >\r\n      {isErrorResponse.status && <p className=\"sign__error\">{isErrorResponse.message}</p>}\r\n      {isLoading && <div className=\"preloader preloader_type_button\" />}\r\n      {!isLoading && <button type=\"submit\" className=\"form__button\">Да</button>}\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default ConfirmationPopup;\r\n","export const handleOriginalResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return res.text();\r\n}\r\n","import { handleOriginalResponse } from './utils';\n\nfunction ReqresApi(options) {\n  const { baseUrl } = options;\n\n  const authorize = (email, password) => {\n    return fetch(`${baseUrl}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then(handleOriginalResponse)\n      .then(data => {\n        if (data.token) {\n          localStorage.setItem('token', data.token);\n          return data;\n        }\n        return data;\n      })\n  }\n\n  const getUsers = (pageNumber) => {\n    return fetch(`${baseUrl}/users?page=${pageNumber}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(handleOriginalResponse)\n  }\n\n  const createUser = (user) => {\n    return fetch(`${baseUrl}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(handleOriginalResponse);\n  }\n\n  const updateUser = (user) => {\n    return fetch(`${baseUrl}/users/${user.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(handleOriginalResponse);\n  }\n\n  const deleteUser = (userId) => {\n    return fetch(`${baseUrl}/users/${userId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n  }\n\n  return {\n    authorize,\n    getUsers,\n    createUser,\n    updateUser,\n    deleteUser\n  }\n}\n\nexport default ReqresApi;\n","function getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height, pageYOffset } = window;\n  const { scrollHeight } = document.body;\n  return {\n    width,\n    height,\n    pageYOffset,\n    scrollHeight,\n  }\n}\n\nexport default getWindowDimensions;","import React, { useState, useEffect, useRef } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Login from './Login';\nimport Main from './Main';\nimport ProtectedRoute from './ProtectedRoute';\nimport PageNotFound from './PageNotFound';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddUserPopup from './AddUserPopup';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport ReqresApi from './../utils/ReqresApi';\nimport { reqresApiBaseUrl, serverRejectMessage } from '../utils/constants';\nimport { AppContext } from '../contexts/AppContext';\nimport getWindowDimensions from '../utils/getWindowDimensions';\n\nfunction App() {\n  const history = useHistory();\n  const [loggedIn, setLoggedIn] = useState(false);                                                    // Стейт-переменная статус пользователя, вход в систему\n  const [users, setUsers] = useState([]);                                                             // Стейт массив найденных пользователей\n  const [renderedUsers, setRenderedUsers] = useState([]);                                             // Стейт массив пользователей для рендера на странице\n  const [editableUser, setEditableUser] = useState({                                                  // Стейт редактируемого пользователя\n    id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    avatar: ''\n  })\n  const [deletedUserId, setDeletedUserId] = useState(0);                                              // Стейт id пользователя для удаления\n  const [windowDimensions, setWindowDimensions] = useState({});                                       // Стейт размеров окна\n  const [showMoreCards, setShowMoreCards] = useState(false);                                          // Стейт показать больше карточек\n  const [isAllCards, setIsAllCards] = useState(false);                                                // Стейт все карточки загружены\n  const lastIndexPage = useRef(1);                                                                    // Последний индекс страницы запроса на сервер\n  const [isLoadingCards, setIsLoadingCards] = useState(false);                                        // Стейт прелоадер загрузки карточек\n  const [isLoadingSignin, setIsLoadingSignin] = useState(false);                                      // Стейт прелоадер загрузки входа пользователя\n  const [isLoadingAdd, setIsLoadingAdd] = useState(false);                                            // Стейт прелоадер загрузки добавления пользователя\n  const [isLoadingUpdate, setIsLoadingUpdate] = useState(false);                                      // Стейт прелоадер загрузки обновления пользователя\n  const [isLoadingDelete, setIsLoadingDelete] = useState(false);                                      // Стейт прелоадер загрузки удаления пользователя\n  const [isAddUserPopupOpen, setIsAddUserPopupOpen] = useState(false);                                // Стейт попап добавления нового пользователя открыт\n  const [isUpdatePopupOpen, setIsUpdatePopupOpen] = useState(false);                                  // Стейт попап обновления данных пользователя открыт\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);                      // Стейт попап подтверждения удаления карточки открыт\n  const [isErrorSigninResponse, setIsErrorSigninResponse] = useState({                                // Стейт ошибки загрузки данных с сервера\n    status: false,\n    message: serverRejectMessage\n  });\n  const [isErrorCreateResponse, setIsErrorCreateResponse] = useState({\n    status: false,\n    message: serverRejectMessage\n  });\n  const [isErrorUpdateResponse, setIsErrorUpdateResponse] = useState({\n    status: false,\n    message: serverRejectMessage\n  });\n  const [isErrorDeleteResponse, setIsErrorDeleteResponse] = useState({\n    status: false,\n    message: serverRejectMessage\n  });\n  const [isError, setIsError] = useState({                                                            // Стейт ошибки загрузки данных\n    status: false,\n    message: serverRejectMessage\n  });\n\n  const reqresApi = ReqresApi({\n    baseUrl: reqresApiBaseUrl,\n  });\n\n  // Функция закрытия всех попапов\n  function closeAllPopups() {\n    setIsAddUserPopupOpen(false);\n    setIsUpdatePopupOpen(false);\n    setIsConfirmationPopupOpen(false);\n  }\n\n  // Загрузка данных пользователей\n  function downloadUsers() {\n    setIsLoadingCards(true);\n    reqresApi.getUsers(lastIndexPage.current)\n      .then(res => {\n        if (res.data.length && lastIndexPage.current <= res.total_pages) {\n          setUsers(res.data);\n          lastIndexPage.current++;\n        } else {\n          setUsers([]);\n          setIsAllCards(true);\n        }\n        setIsLoadingCards(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsError({\n          ...isError,\n          status: true\n        });\n      });\n  }\n\n  // Обработчик клика по кнопке добавить пользователя\n  function handleAddUserClick() {\n    setIsAddUserPopupOpen(true);\n  }\n\n  // Обработчик добавления пользователя\n  function handleAddUserSubmit(newUser) {\n    setIsLoadingAdd(true);\n    setIsErrorCreateResponse({\n      ...isErrorCreateResponse,\n      status: false,\n      message: serverRejectMessage\n    });\n    reqresApi.createUser(newUser)\n      .then(res => {\n        if (res.createdAt) {\n          setRenderedUsers([\n            res,\n            ...renderedUsers\n          ]);\n          setIsLoadingAdd(false);\n          closeAllPopups();\n        } else {\n          setIsErrorCreateResponse({\n            ...isErrorCreateResponse,\n            status: true,\n            message: JSON.parse(res.text()).error\n          });\n        }\n      })\n  }\n\n  // Обработчик клика по кнопке редактирования профиля\n  function handleUpdateUserClick(currentUser) {\n    setIsUpdatePopupOpen(true);\n    setEditableUser({\n      ...editableUser,\n      id: currentUser.id,\n      first_name: currentUser.first_name,\n      last_name: currentUser.last_name,\n      email: currentUser.email,\n      avatar: currentUser.avatar\n    })\n  }\n\n  // Обработчик обновления данных пользователя\n  function handleUpdateUserSubmit(userData) {\n    setIsLoadingUpdate(true);\n    setIsErrorUpdateResponse({\n      ...isErrorUpdateResponse,\n      status: false,\n      message: serverRejectMessage\n    });\n    reqresApi.updateUser(userData)\n      .then(res => {\n        if (res.updatedAt) {\n          const { first_name, last_name, email, avatar } = res;\n          setRenderedUsers(renderedUsers.map(u => {\n            if (u.id === userData.id) {\n              return {\n                ...u,\n                first_name,\n                last_name,\n                email,\n                avatar\n              }\n            }\n            return u;\n          }));\n          setIsLoadingUpdate(false);\n          closeAllPopups();\n        } else {\n          setIsErrorUpdateResponse({\n            ...isErrorUpdateResponse,\n            status: true,\n            message: JSON.parse(res).error\n          });\n          setIsLoadingUpdate(false);\n        }\n\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Обработчик клика по кнопке удалить карточку\n  function handleDeleteUserClick(user) {\n    setDeletedUserId(user.id);\n    setIsConfirmationPopupOpen(true);\n  }\n\n  // Обработчик удаления карточки\n  function handleDeleteUserSubmit(userId) {\n    setIsLoadingDelete(true);\n    setIsErrorDeleteResponse({\n      ...isErrorDeleteResponse,\n      status: false,\n      message: serverRejectMessage\n    });\n    reqresApi.deleteUser(userId)\n      .then(res => {\n        if (res.status === 204) {\n          setRenderedUsers(renderedUsers.filter((u) => u.id !== userId));\n          closeAllPopups();\n        } else {\n          setIsErrorDeleteResponse({\n            ...isErrorDeleteResponse,\n            status: true,\n            message: JSON.parse(res.text()).error\n          });\n        }\n        setIsLoadingDelete(false);\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Обработчик по кнопке Войти\n  function handleLogin(email, password) {\n    setIsLoadingSignin(true);\n    setIsErrorSigninResponse({\n      ...isErrorSigninResponse,\n      status: false\n    });\n    reqresApi.authorize(email, password)\n      .then(data => {\n        setIsLoadingSignin(false);\n        if (data.token) {\n          setLoggedIn(true);\n          history.push('/');\n        } else {\n          setIsErrorSigninResponse({\n            ...isErrorSigninResponse,\n            status: true,\n            message: JSON.parse(data).error\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Выход из аккаунта\n  function handleSignout() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    lastIndexPage.current = 1;\n    setIsAllCards(false);\n    setRenderedUsers([]);\n    downloadUsers();\n    history.push('/signin');\n  }\n\n  // Проверка токена при повторном посещении сайта\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      history.push('/');\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  }, []);\n\n  // Первичная загрузка данных пользователей\n  useEffect(() => {\n    downloadUsers();\n    setRenderedUsers([...users]);\n  }, []);\n\n  // Отрисовать загруженных пользователей\n  useEffect(() => {\n    if (users.length) {\n      setRenderedUsers([\n        ...renderedUsers,\n        ...users\n      ]);\n    }\n  }, [users]);\n\n  // Слушатель скролла на странице\n  useEffect(() => {\n    function handleScroll() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Проверка прокрутки скролла\n  useEffect(() => {\n    if (windowDimensions.height + windowDimensions.pageYOffset === windowDimensions.scrollHeight) {\n      setShowMoreCards(true);\n    } else {\n      setShowMoreCards(false);\n    }\n  }, [windowDimensions])\n\n  // Добавить пользователей по скроллу\n  useEffect(() => {\n    if (showMoreCards && !isAllCards) {\n      downloadUsers();\n    }\n  }, [showMoreCards])\n\n  // Добавить/удалить слушателя нажатия Esc при открытии попапа\n  useEffect(() => {\n    function handleEscClose(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      };\n    }\n\n    (isAddUserPopupOpen || isUpdatePopupOpen || isConfirmationPopupOpen) && document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    }\n  }, [isAddUserPopupOpen, isUpdatePopupOpen, isConfirmationPopupOpen, closeAllPopups]);\n\n  return (\n    <AppContext.Provider value={{ loggedIn }}>\n      <div className=\"page__container\">\n        <Switch>\n          <Route path=\"/signin\">\n            <Login\n              handleLogin={handleLogin}\n              isLoading={isLoadingSignin}\n              isErrorResponse={isErrorSigninResponse}\n            />\n          </Route>\n          <ProtectedRoute\n            exact path=\"/\"\n            component={Main}\n            onAddUser={handleAddUserClick}\n            onClickSignout={handleSignout}\n            cards={renderedUsers}\n            isLoadingCards={isLoadingCards}\n            isAllCards={isAllCards}\n            isError={isError}\n            onCardEdit={handleUpdateUserClick}\n            onCardDelete={handleDeleteUserClick}\n          >\n          </ProtectedRoute>\n          <Route path=\"*\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n        {/* <!-- Попап редактировать профиль --> */}\n        <EditProfilePopup\n          currentUser={editableUser}\n          isOpen={isUpdatePopupOpen}\n          onClose={closeAllPopups}\n          onUpdate={handleUpdateUserSubmit}\n          isLoading={isLoadingUpdate}\n          isErrorResponse={isErrorUpdateResponse}\n        />\n        {/* <!-- Попап добавить карточку --> */}\n        <AddUserPopup\n          isOpen={isAddUserPopupOpen}\n          onClose={closeAllPopups}\n          onAdd={handleAddUserSubmit}\n          isLoading={isLoadingAdd}\n          isErrorResponse={isErrorCreateResponse}\n        />\n        {/* <!-- Попап удаления карточки --> */}\n        <ConfirmationPopup\n          isOpen={isConfirmationPopupOpen}\n          onClose={closeAllPopups}\n          onCardDelete={handleDeleteUserSubmit}\n          cardId={deletedUserId}\n          isLoading={isLoadingDelete}\n          isErrorResponse={isErrorDeleteResponse}\n        />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}